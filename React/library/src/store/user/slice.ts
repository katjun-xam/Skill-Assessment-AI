import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';
import { RootState } from 'store';
import { fetchUser } from './api';
import { initialState } from './initialState';

export const getUserAsync = createAsyncThunk('user/fetchUser', async () => {
  const response = await fetchUser();

  return response.data;
});

export const userSlice = createSlice({
  // The `name` field holds the name of the state
  name: 'user',
  // The `initialState` field holds the initial/default state of the reducer
  initialState: initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {
    getUser: (state) => {
      return {
        ...state,
        identity: {
          title: 'Mr',
          firstName: 'John',
          lastName: 'Doe',
          dateOfBirth: '2021-09-13T00:00:00.000Z',
        },
        isLogged: true,
      };
    },
    updateUser: (state, action: PayloadAction<{ firstName: string; lastName: string }>) => {
      return {
        ...state,
        identity: {
          ...state.identity,
          firstName: action.payload.firstName || 'John',
          lastName: action.payload.lastName || 'Doe',
        },
      };
    },
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {
    builder
      .addCase(getUserAsync.pending, (state) => {
        state.status = 'loading';
      })
      .addCase(getUserAsync.fulfilled, (state, action) => {
        state.status = 'idle';
        state.isLogged = true;
        state.identity = action.payload;
      });
  },
});

// The function below is called a selector and allows us to select a value from
// the state. Selectors can also be defined inline where they're used instead of
// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`
export const selectUser = (state: RootState) => state.user;

// Below statement helps to export specific actions related to this state
export const { getUser, updateUser } = userSlice.actions;

// Below statement exports this reducer as default to be used in store configuration under store.ts
export default userSlice.reducer;
